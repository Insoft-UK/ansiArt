#!/bin/bash
DIR=$(dirname "$0")

clear
ANSI_ART=$(cat <<EOF
\e[0;m                            \e[48;5;214m      \e[0;m      \e[0;m
\e[48;5;214m          \e[0;m  \e[48;5;214m                    \e[0;m  \e[48;5;214m      \e[0;m
\e[48;5;214m          \e[0;m  \e[48;5;214m                  \e[0;m  \e[48;5;214m        \e[0;m
\e[48;5;214m      \e[0;m                \e[48;5;214m      \e[0;m      \e[48;5;214m      \e[0;m
\e[48;5;214m      \e[0;m              \e[48;5;214m      \e[0;m        \e[48;5;214m      \e[0;m
\e[48;5;214m      \e[0;m            \e[48;5;214m      \e[0;m          \e[48;5;214m      \e[0;m
\e[48;5;214m      \e[0;m          \e[48;5;214m      \e[0;m            \e[48;5;214m      \e[0;m
\e[48;5;214m      \e[0;m        \e[48;5;214m      \e[0;m              \e[48;5;214m      \e[0;m
\e[48;5;214m      \e[0;m      \e[48;5;214m      \e[0;m                \e[48;5;214m      \e[0;m
\e[48;5;214m        \e[0;m  \e[48;5;214m                  \e[0;m  \e[48;5;214m          \e[0;m
\e[48;5;214m      \e[0;m  \e[48;5;214m                    \e[0;m  \e[48;5;214m          \e[0;m
\e[0;m      \e[48;5;214m      \e[0;m                            \e[0;m
EOF
)
printf "$ANSI_ART\n"

cd $DIR

# Use find to locate the .xcodeproj file
xcodeproj_file=$(find . -name "*.xcodeproj" -print -quit)

# Check if a .xcodeproj file was found
if [ -n "$xcodeproj_file" ]; then
    xcodeproj_name=$(basename "$xcodeproj_file" .xcodeproj)
else
    echo "No .xcodeproj file found."
    read
    # Close the Terminal window
    osascript -e 'tell application "Terminal" to close window 1' & exit
fi

# Ask the user a question
CPU=$(osascript -e 'display dialog "CPU?" buttons {"x86_64", "i386", "aarch64"} default button "x86_64"')
CPU=$xcodeproj_name_${CPU#button returned:}

# Process the results
TARGET=$CPU-linux-gnu

# Compiling Code...
if [ ! -d "bin" ]; then
    mkdir bin
fi
if [ ! -d "bin/linux" ]; then
    mkdir bin/linux
fi
if [ ! -d "bin/linux/$CPU" ]; then
    mkdir bin/linux/$CPU
fi

echo "Compiling Code..."
zig c++ -target $TARGET -std=c++20 -o bin/linux/$CPU/$xcodeproj_name src/*.cpp -s


# Close the Terminal window
osascript -e 'tell application "Terminal" to close window 1' & exit
